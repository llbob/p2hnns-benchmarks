float:
  any:
    - base_args: ['@metric']
      constructor: MQH_v2
      disabled: false
      docker_tag: p2hnns-benchmarks-mqh-v2
      module: p2hnns_benchmarks.algorithms.mqh-v2
      name: mqh-v2
      run_groups:
        mqh-test:
          args: [
              [16], # [M2 - number of subcodebooks]
              [4], # [level - number of levels]
              [1], # [m_level - number of hash tables per level]
              [64], # [m_num - number of bits per hash table]
          ]
          query_args: [
              [3, 5, 7], # [1,3,5,7], # [l0 - hash offset]
              [0.1,0.3,0.5], # [0.1,0.2,0.3,0.4,0.5,0.6], # [delta - filtering parameter]
              [0,1], # [flag - 0 for approximate, 1 for precise]
              [0.2,0.5,0.8,1.0] # initial_candidates_fraction
          ]

    - base_args: ['@metric']
      constructor: BT_MQH_v2
      disabled: false
      docker_tag: p2hnns-benchmarks-mqh-v2
      module: p2hnns_benchmarks.algorithms.mqh-v2
      name: bt-mqh-v2
      run_groups:
        BT_MQH:
          args: [
              [25], # [max_leaf_size - BTree parameter]
              [16], # [M2 - number of subcodebooks]
              [4], # [level - number of levels]
              [1], # [m_level - number of hash tables per level]
              [64], # [m_num - number of bits per hash table]
          ]
          query_args: [
              [250,1000,2000,10000], # [initial_topk - parameter for BTree]
              [3,5,7], # [l0 - hash offset]
              [0.1,0.3,0.5], # [delta - filtering parameter]
              [0,1], # [flag - 0 for approximate, 1 for precise]
              [1] # initial candidates fraction - unused in this case as we're taking in external candidates
          ]

    - base_args: ['@metric']
      constructor: MH_MQH_v2
      disabled: true
      docker_tag: p2hnns-benchmarks-mqh-v2
      module: p2hnns_benchmarks.algorithms.mqh-v2
      name: mh-mqh-v2
      run_groups:
        MH_MQH:
          args: [
              [4], #m projection vectors
              [8], # bit string length
              [4, 8], #l hash tables
              [16], # [M2 - number of subcodebooks]
              [4], # [level - number of levels]
              [1], # [m_level - number of hash tables per level]
              [64], # [m_num - number of bits per hash table]
          ]
          query_args: [
              [250,1000,2000,10000], # [initial_topk - parameter for MH]
              [3,5,7], # [l0 - hash offset]
              [0.1,0.3,0.5], # [delta - filtering parameter]
              [0,1], # [flag - 0 for approximate, 1 for precise]
              [1] # initial candidates - unused in this case as we're taking in external candidates
          ]